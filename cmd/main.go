package main

import (
	"cdnService/internal/config"
	"cdnService/internal/handlers"
	"cdnService/internal/model"
	"github.com/gofiber/fiber/v2"
	"github.com/sirupsen/logrus"
)

var cfg config.Config
var router = fiber.New()

func init() {

	var err error
	cfg, err = config.LoadConfig()
	if err != nil {
		logrus.Fatal("Couldn't parse config", err)
	}
	model.SN = model.NewSyncMap()

	router.Post("/upload", handlers.PostHandler)
	router.Get("/image/:id", handlers.GetHandler)
}

func main() {

	model.SN.Store("1", "")

	err := router.Listen(cfg.CDNPort) // инизиализируем сервер
	if err != nil {
		logrus.Fatal("Could not to start listen on port : ", cfg.CDNPort)
	}
}
